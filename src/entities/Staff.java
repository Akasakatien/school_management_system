package entities;
// Generated Aug 26, 2016 12:06:24 AM by Hibernate Tools 5.1.0.Alpha1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.validation.constraints.NotNull;

import org.hibernate.validator.constraints.NotEmpty;

/**
 * Staff generated by hbm2java
 */
@Entity
@Table(name = "Staff", catalog = "schoolmanagement")
public class Staff implements java.io.Serializable {

	private int id;
	private Integer staffCode;
	private String name;
	private Date dateOfBirth;
	private String sex;
	private byte[] photo;
	private Integer phone;
	private String address;
	private String email;
	private String feedback;
	private Set<Educational> educationals = new HashSet<Educational>(0);
	private Set<Promotion> promotions = new HashSet<Promotion>(0);
	private Set<StaffExperience> staffExperiences = new HashSet<StaffExperience>(0);
	private Set<StaffFamily> staffFamilies = new HashSet<StaffFamily>(0);
	private Set<Divison> divisons = new HashSet<Divison>(0);

	public Staff() {
	}

	public Staff(int id) {
		this.id = id;
	}

	public Staff(int id, Integer staffCode, String name, Date dateOfBirth, String sex, byte[] photo, Integer phone,
			String address, String email, String feedback, Set<Educational> educationals, Set<Promotion> promotions,
			Set<StaffExperience> staffExperiences, Set<StaffFamily> staffFamilies, Set<Divison> divisons) {
		this.id = id;
		this.staffCode = staffCode;
		this.name = name;
		this.dateOfBirth = dateOfBirth;
		this.sex = sex;
		this.photo = photo;
		this.phone = phone;
		this.address = address;
		this.email = email;
		this.feedback = feedback;
		this.educationals = educationals;
		this.promotions = promotions;
		this.staffExperiences = staffExperiences;
		this.staffFamilies = staffFamilies;
		this.divisons = divisons;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}
	@NotEmpty
	@Column(name = "staffCode")
	public Integer getStaffCode() {
		return this.staffCode;
	}
	
	public void setStaffCode(Integer staffCode) {
		this.staffCode = staffCode;
	}
	@NotEmpty
	@Column(name = "name", length = 50)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "dateOfBirth", length = 23)
	public Date getDateOfBirth() {
		return this.dateOfBirth;
	}

	public void setDateOfBirth(Date dateOfBirth) {
		this.dateOfBirth = dateOfBirth;
	}
	@NotEmpty
	@Column(name = "sex", length = 20)
	public String getSex() {
		return this.sex;
	}

	public void setSex(String sex) {
		this.sex = sex;
	}

	@Column(name = "photo")
	public byte[] getPhoto() {
		return this.photo;
	}

	public void setPhoto(byte[] photo) {
		this.photo = photo;
	}
	@NotNull
	@Column(name = "phone")
	public Integer getPhone() {
		return this.phone;
	}

	public void setPhone(Integer phone) {
		this.phone = phone;
	}

	@Column(name = "address", length = 50)
	public String getAddress() {
		return this.address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	@Column(name = "email", length = 50)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "feedback", length = 50)
	public String getFeedback() {
		return this.feedback;
	}

	public void setFeedback(String feedback) {
		this.feedback = feedback;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "staff")
	public Set<Educational> getEducationals() {
		return this.educationals;
	}

	public void setEducationals(Set<Educational> educationals) {
		this.educationals = educationals;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "staff")
	public Set<Promotion> getPromotions() {
		return this.promotions;
	}

	public void setPromotions(Set<Promotion> promotions) {
		this.promotions = promotions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "staff")
	public Set<StaffExperience> getStaffExperiences() {
		return this.staffExperiences;
	}

	public void setStaffExperiences(Set<StaffExperience> staffExperiences) {
		this.staffExperiences = staffExperiences;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "staff")
	public Set<StaffFamily> getStaffFamilies() {
		return this.staffFamilies;
	}

	public void setStaffFamilies(Set<StaffFamily> staffFamilies) {
		this.staffFamilies = staffFamilies;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "staff")
	public Set<Divison> getDivisons() {
		return this.divisons;
	}

	public void setDivisons(Set<Divison> divisons) {
		this.divisons = divisons;
	}

}
